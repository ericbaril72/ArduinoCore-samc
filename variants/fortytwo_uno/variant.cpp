/*
  Copyright (c) 2014-2015 Arduino LLC.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include "variant.h"

/*
 * Pins descriptions
 */
const PinDescription g_APinDescription[]=
{
  // 0..1 
  // SERCOM/UART (Serial1)
  { PORTA, 11, PIO_SERCOM, PER_ATTR_SERCOM_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_11, GCLK_CCL_NONE }, // RX0: SERCOM3/PAD[1]
  { PORTA, 10, PIO_SERCOM, PER_ATTR_SERCOM_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_10, GCLK_CCL_NONE }, // TX0: SERCOM3/PAD[0]

  // 2..7
  // Digital Low
  { PORTA, 14, PIO_TIMER_PWM, PER_ATTR_TIMER_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH4, No_ADC_Channel, EXTERNAL_INT_14, GCLK_CCL_NONE }, // TCC2/WO[0]
  { PORTA,  9, PIO_TIMER_PWM, PER_ATTR_TIMER_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC1_CH3, No_ADC_Channel, EXTERNAL_INT_9, GCLK_CCL_NONE }, // TCC2/WO[1]
  { PORTA,  8, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH0, No_ADC_Channel, EXTERNAL_INT_NMI, GCLK_CCL_NONE },  // TC4/WO[0]
  { PORTA, 15, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC4_CH1, No_ADC_Channel, EXTERNAL_INT_15, GCLK_CCL_NONE }, // TC4/WO[1]
  { PORTA, 20, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC3_CH0, No_ADC_Channel, EXTERNAL_INT_4, GCLK_CCL_NONE }, // TC5/WO[0]
  { PORTA, 21, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC3_CH1, No_ADC_Channel, EXTERNAL_INT_5, GCLK_CCL_NONE }, // TC5/WO[1]

  // 8..12
  // Digital High
  { PORTA,  6, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH0, No_ADC_Channel, EXTERNAL_INT_6, GCLK_CCL_NONE }, // TCC1/WO[2]
  { PORTA,  7, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC0_CH1, No_ADC_Channel, EXTERNAL_INT_7, GCLK_CCL_NONE }, // TCC1/WO[3]
  { PORTA, 18, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC4_CH0, No_ADC_Channel, EXTERNAL_INT_2, GCLK_CCL_NONE }, // TC3/WO[0]
  { PORTA, 16, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC2_CH0, No_ADC_Channel, EXTERNAL_INT_0, GCLK_CCL_NONE }, // TC3/WO[1]
  { PORTA, 19, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TC4_CH1, No_ADC_Channel, EXTERNAL_INT_3, GCLK_CCL_NONE }, // TC0/WO[0]

  // 13 - 
  // LED
  { PORTA, 17, PIO_TIMER_PWM, PER_ATTR_TIMER_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_TIMER), TCC2_CH1, No_ADC_Channel, EXTERNAL_INT_1, GCLK_CCL_NONE }, // TC0/WO[1]
  
  // 14..19 - 
  // Analog pins
  { PORTA,  2, PIO_ANALOG_ADC, PER_ATTR_ADC_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG), NOT_ON_TIMER, ADC_Channel0, EXTERNAL_INT_2, GCLK_CCL_NONE }, // A0
  { PORTB,  8, PIO_ANALOG_ADC, PER_ATTR_ADC_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG), NOT_ON_TIMER, ADC_Channel8, EXTERNAL_INT_8, GCLK_CCL_NONE }, // A1
  { PORTB,  9, PIO_ANALOG_ADC, PER_ATTR_ADC_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG), NOT_ON_TIMER, ADC_Channel9, EXTERNAL_INT_9, GCLK_CCL_NONE }, // A2
  { PORTA,  4, PIO_ANALOG_ADC, PER_ATTR_ADC_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG), NOT_ON_TIMER, ADC_Channel10, EXTERNAL_INT_4, GCLK_CCL_NONE }, // A3
  { PORTA,  5, PIO_ANALOG_ADC, PER_ATTR_ADC_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG), NOT_ON_TIMER, ADC_Channel10, EXTERNAL_INT_5, GCLK_CCL_NONE }, // A4
  { PORTB,  2, PIO_ANALOG_ADC, PER_ATTR_ADC_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_ANALOG), NOT_ON_TIMER, ADC_Channel11, EXTERNAL_INT_2, GCLK_CCL_NONE }, // A5
  
  // 20..21 -  
  // I2C pins (SDA/SCL)
  { PORTA, 22, PIO_SERCOM, PER_ATTR_SERCOM_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_6, GCLK_CCL_NONE }, // SDA: SERCOM3/PAD[0]
  { PORTA, 23, PIO_SERCOM, PER_ATTR_SERCOM_STD, (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_7, GCLK_CCL_NONE }, // SCL: SERCOM3/PAD[1]

  // 22..24 - 
  // SPI pins (ICSP:MISO,MOSI,SCK)
  { PORTA, 12, PIO_SERCOM, PER_ATTR_SERCOM_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_12, GCLK_CCL_NONE }, // MISO: SERCOM4/PAD[0]
  { PORTB, 10, PIO_SERCOM, PER_ATTR_SERCOM_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_14, GCLK_CCL_NONE }, // MOSI: SERCOM4/PAD[2]
  { PORTB, 11, PIO_SERCOM, PER_ATTR_SERCOM_ALT, (PIN_ATTR_DIGITAL|PIN_ATTR_SERCOM|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_15, GCLK_CCL_NONE }, // SCK: SERCOM4/PAD[3]

  // 25..26
  // FTDI UART (USB)
  { PORTB, 22, PIO_SERCOM, PER_ATTR_SERCOM_ALT, (PIN_ATTR_SERCOM|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_6, GCLK_CCL_NONE }, // TX: SERCOM5/PAD[2]
  { PORTB, 23, PIO_SERCOM, PER_ATTR_SERCOM_ALT, (PIN_ATTR_SERCOM|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_7, GCLK_CCL_NONE }, // RX: SERCOM5/PAD[3]

  // 27
  // AREF
  { PORTA,  3, PIO_ANALOG_REF, PER_ATTR_ADC_STD, (PIN_ATTR_REF), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_3, GCLK_CCL_NONE }, // ADC-DAC/VREFA

  // 28
  // Alternate use of A0 (DAC output)
  { PORTA,  2, PIO_ANALOG_DAC, PER_ATTR_NONE, (PIN_ATTR_DAC), NOT_ON_TIMER, DAC_Channel0, EXTERNAL_INT_2, GCLK_CCL_NONE }, // DAC/VOUT
  
  // 29..34
  // Extra pins on internal header
  { PORTB, 03, PIO_MULTI, PER_ATTR_NONE, (PIN_ATTR_DIGITAL), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_3, GCLK_CCL_NONE },
  { PORTA, 24, PIO_MULTI, PER_ATTR_NONE, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_12, GCLK_CCL_NONE },
  { PORTA, 25, PIO_MULTI, PER_ATTR_NONE, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_13, GCLK_CCL_NONE },
  { PORTA, 13, PIO_MULTI, PER_ATTR_NONE, (PIN_ATTR_DIGITAL), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_13, GCLK_CCL_NONE },
  { PORTA, 27, PIO_MULTI, PER_ATTR_NONE, (PIN_ATTR_DIGITAL), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_15, GCLK_CCL_NONE },
  { PORTA, 28, PIO_MULTI, PER_ATTR_NONE, (PIN_ATTR_DIGITAL), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_8, GCLK_CCL_NONE },

  // 35..36
  // JTAG SWD 
  { PORTA, 30, PIO_COM, PER_ATTR_NONE, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_10, GCLK_CCL_NONE }, // SWCLK
  { PORTA, 31, PIO_COM, PER_ATTR_NONE, (PIN_ATTR_DIGITAL|PIN_ATTR_COM), NOT_ON_TIMER, No_ADC_Channel, EXTERNAL_INT_11, GCLK_CCL_NONE }, // SWDIO
};

const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TCC1, TCC2, TC0, TC1, TC2, TC3, TC4 } ;

// Multi-serial objects instantiation
SERCOM sercom0( SERCOM0 ) ;
SERCOM sercom1( SERCOM1 ) ;
SERCOM sercom2( SERCOM2 ) ;
SERCOM sercom3( SERCOM3 ) ;
SERCOM sercom4( SERCOM4 ) ;
SERCOM sercom5( SERCOM5 ) ;

Uart SerialUSB( &sercom5, PIN_SERIALUSB_RX, PIN_SERIALUSB_TX, PAD_SERIALUSB_RX, PAD_SERIALUSB_TX, 255, 255 );
Uart Serial( &sercom3, PIN_SERIAL_RX, PIN_SERIAL_TX, PAD_SERIAL_RX, PAD_SERIAL_TX ) ;

void SERCOM3_Handler()
{
  Serial.IrqHandler();
}

void SERCOM5_Handler()
{
  SerialUSB.IrqHandler();
}

extern "C" {
	unsigned int PINCOUNT_fn() {
		return (sizeof(g_APinDescription) / sizeof(g_APinDescription[0]));
	}
}